c语言程序的思想 the thinking of the c language application
1.枚举法[enumeration method]
	concluded by examining all possible senarios for certain types of event
#include <stdio.h>
 int main()
 {	printf("hello!world"\n);
 	return 0;
 }
注意:不要用中文输入法.
     ""内是原封不动输出的字节
     
例题:算找零
   printf("23+43=\d \n",23+43);
   printf("100-23=\d \n",100-23);
   需要:
    有地方放输入的数字;
    有办法输入数字;
    输入的数字能参与运算;
题1.     change.c
  #include<stdio.h>
  int main()
  {	int price=0;
  	 printf("请输入金额(元);");
	 scanf("%d,&price");
	int change=100-price;
	 printf("找您%d元"\n,change);
  }
  变量   int pirce=0;
         这一行定义了变量,名字为price,类型是int,初始值是0.
         变量是一个保存数据的地方,当需要再程序里保存数据时,如上面例子中要记录用户输入价格,就需要一个变量来保存他.用一个变量来保存了数据,它才能参加到后面的计算中
         一般形式:<类型名称><变量名称>;
         举例: int price;
               int amount;
  变量的名字--标识符
         用来识别这个和那个的不同的名字.
         构造规则:
                基本原则:只能用字母,数字,下划线组成,开头不能用数字
                c语言的关键字(保留字)不可以用作标识符
                关键字:auto,break,case,char,const,continue,default,do,double,else,enum,extern,float,for,goto,if,int,long,register,return,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile,while,inline,restrict
                 不需要背,程序会提示
  赋值和初始化
         int price =0;
         等号把右边的数据交给左边,因为0是初始值,所以又叫初始化.
      赋值:
          在数学中,a=b表示关系,即a和b的值一样;
          在程序设计中,a=b表示要求计算机做一个动作:将b的值赋给a.
          关系是静态的,动作是动态的.在数学中a=b和b=a是等价的,再程序设计中则完全相反.
      初始化:
          <类型名称><变量名称>=<初始值>;
	  int price=0;
	  int amount=100;
	  组合变量定义的时候,也可以在这个定义中单独给单个变量赋初值,
	  如:int price=0,amount=100;
      表达式(expression):
      	  "="是赋值运算符,有运算符的狮子叫做表达式.
	  price=0;
	  change=100-price;
  变量类型
    	  int price=0;
	  这一行定义了变量,名字为price,类型是int,初始值是0.
	  c语言是一种有类型的语言,所有的变量在使用之前必须定义或声明,所有的变量必须有确定的数据类型.数据类型表示在变量中存放什么样的数据,变量中只能存放指定类型的数据,程序运行过程中也不能改变变量的类型.
  常量
  	  int change=100-price;
	  固定不变的数,是常数.直接写在程序里,我们称作直接量(literal).
	  更好的方式,是定义一个常量:const int AMOUNT=100;
      const
          const是一个修饰符,加在int的前面,用来给这个变量加上一个const(不变的)的属性.这个const的属性表示这个变量的值一旦初始化,就不能再修改了.
	  int change=AMOUNT-price;
	  如果你试图对常量做修改,把它放在赋值运算符的左边.就会被编译器发现,指出为一个错误.
题2    计算身高
  #include<stdio.h>
  main()
  {	int foot;
  	int inch;    
	scanf("%d %d",&foot,&inch);
	printf("身高是%f米.\n",((foot+inch/12)*0.3048));
  }
  浮点数:
  	  带小数点的数值.浮点这个词的本意就是指小数点是浮动的,是计算机内部表达非整数(包含分数和无理数)的一种方式.另一种方式叫做定点数,不过在c语言中你不会遇到定点数.人们借用浮点数这个词来表达所有的带小数点的数.
       改进:(foot+inch/12)*0.3048->(foot+inch/12.0)*0.3048
      double:
      	inch是定义为int类型的变量,如果把int换成double,我们就把它改为double类型的浮点数变量了.
	double的意思就是"双",它本来就是"双精度浮点数"的第一个单词,人们用来表示浮点数类型.除了double,还有float(意思是浮点!)表示单精度浮点数.
       改进:int foot;
  	    int inch;    
	    scanf("%d %d",&foot,&inch);
	    -->
	    double foot
       	    double inch;
       	    scanf("%ld %ld",&foot,&inch);
  表达式:
  	  一个表达式是一系列运算符和算子的组合,用来计算一个值.
      运算符:
      	  运算符(operator)是指进行运算的动作,比如加法运算符"+",减法运算符"-".
	  算子(operand)是指参与运算的值,这个值可能是常数,也可能是变量,还可能是一个方法的返回值.
题3      计算时间差
  #include<stdio.h>
  main()
  {     int hour1,minute1;
  	int hour2,minute2;
	int t1,t2;
	int t;
	scanf("%d %d",&hour1,&minute1);
	scanf("%d %d",&hour2,&minute2);
	t1=hour1*60+minute1;
	t2=hour2*60+minute2;
	t=t2-t1;
	printf("时间差是%d小时%d分钟",t/60,t%60);
   }  
  	t1=hour1*60+minute1;->转换分钟为单位
	t/60->小时部分;t%60->分钟部分
  复合赋值
        五个运算符,+-*/%,可以和赋值运算符"="结合起来,形成复合赋值运算符:"+=","-=","*=","/="和"%="
	total+=5;
	<=>
	total=total+5;
        注:两个运算符之间不要有空格
     辨析:
        total+=(sum+100)/2;
	<=>total=total+(sum+100)/2;
	total*=sum+12;
	<=>total=total*(sum+12);
  递增递减运算符:
  	"++"和"--"是两个很特殊的运算符,他们是单目运算符,这个算子还必须是变量.这两个运算符分别叫做递增和递减运算符,他们的作用就是给这个变量+1或者-1.
     前缀后缀:
        放在变量之前或者之后,分别是前缀形式和后缀形式
        表达的值也不同a++表达的是a的值,之后再加1,++a是a+1的值.
   
	
	
                 
  
